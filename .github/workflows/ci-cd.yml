name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      # 1. Haal de code op
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Installeer JDK 17
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache Maven dependencies
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # 4. Build het project
      - name: Build with Maven
        run: mvn clean install

      # 5. Voer tests uit
      - name: Run tests
        run: mvn test

      # 6. SonarCloud analyse
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=Fantasyfays_NrfaBoekhoudApplicatie \
            -Dsonar.organization=fantasyfays \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      # 7. Controleer de SonarCloud Quality Gate status
      - name: Check Quality Gate status
        uses: sonarsource/sonarcloud-github-action@v1.3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
